(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function n(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(i){if(i.ep)return;i.ep=!0;const r=n(i);fetch(i.href,r)}})();const u={f:()=>{},renderer:null},E=()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","polyline");return e.setAttribute("stroke-width",2),e.setAttribute("stroke","#000"),e.setAttribute("stroke-linecap","round"),e.setAttribute("stroke-linejoin","round"),e.setAttribute("fill","transparent"),e},P=()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","polygon");return e.setAttribute("stroke-width",0),e.setAttribute("stroke-linecap","round"),e.setAttribute("stroke-linejoin","round"),e.setAttribute("fill","#000"),e},w=()=>({origin:{x:0,y:0},move:{x:5,y:0},points:[{x:0,y:0}],bounds:{mx:0,my:0,Mx:0,My:0}}),A=()=>({centers:[{x:0,y:0}],bounds:{mx:0,my:0,Mx:0,My:0},ratio:0,angle:0,sides:0,rad:0}),f=(e,t)=>{const n=e.x*Math.cos(t)-e.y*Math.sin(t),o=e.x*Math.sin(t)+e.y*Math.cos(t);e.x=n,e.y=o},m=e=>{e.points.push({x:e.origin.x+e.move.x,y:e.origin.y+e.move.y}),e.origin.x+=e.move.x,e.origin.y+=e.move.y,e.bounds.mx=Math.min(e.bounds.mx,e.origin.x),e.bounds.my=Math.min(e.bounds.my,e.origin.y),e.bounds.Mx=Math.max(e.bounds.Mx,e.origin.x),e.bounds.My=Math.max(e.bounds.My,e.origin.y)},I=(e,t)=>{const n=[];e.centers.forEach(o=>{const i={x:0,y:-e.rad*(1-e.ratio)*Math.pow(e.ratio,t)};for(let r=0;r<e.sides;r++)n.push({x:o.x+i.x,y:o.y+i.y}),f(i,e.angle)}),e.centers=n},k=(e,t)=>{const n=[],o=[];e.centers.forEach(i=>{o.push(i);const r={x:0,y:-e.rad*(1-e.ratio)*Math.pow(e.ratio,t)};for(let l=0;l<e.sides;l++)n.push({x:i.x+r.x,y:i.y+r.y}),f(r,e.angle)}),e.invCenters.forEach(i=>{n.push(i);const r={x:0,y:e.rad*(1-e.ratio)*Math.pow(e.ratio,t)};for(let l=0;l<e.sides;l++)o.push({x:i.x+r.x,y:i.y+r.y}),f(r,e.angle)}),e.centers=n,e.invCenters=o},B={linear:["Dragon Curve","Levy Curve","Gosper Curve","Koch Snowflake","Minkowski Sausage","Hilbert Curve","Peano Curve","Fibonacci Word Fractal"],fill:["Sierpinski Triangle","Sierpinski Pentagon","Sierpinski Hexagon","Pentaflake","Hexaflake"],branching:[],sets:[],attractors:[],scapes:[]},C={linear:{dragonCurve:(e,t)=>({transform:{I:"f",f:"fph",h:"fnh"},rules:{f:n=>n?e.f(n-1,"f"):m(t),h:n=>n?e.f(n-1,"h"):m(t),p:n=>f(t.move,-Math.PI/2),n:n=>f(t.move,Math.PI/2)}}),levyCurve:(e,t)=>({transform:{I:"f",f:"pfnnfp"},rules:{f:n=>n?e.f(n-1,"f"):m(t),p:n=>f(t.move,-Math.PI/4),n:n=>f(t.move,Math.PI/4)}}),gosperCurve:(e,t)=>({transform:{I:"f",f:"fnhnnhpfppffphn",h:"pfnhhnnhnfppfph"},rules:{f:n=>n?e.f(n-1,"f"):m(t),h:n=>n?e.f(n-1,"h"):m(t),p:n=>f(t.move,-Math.PI/3),n:n=>f(t.move,+Math.PI/3)}}),kochSnowflake:(e,t)=>({transform:{I:"fnnfnnfnn",f:"fpfnnfpf"},rules:{f:n=>n?e.f(n-1,"f"):m(t),p:n=>f(t.move,-Math.PI/3),n:n=>f(t.move,Math.PI/3)}}),minkowskiSausage:(e,t)=>({transform:{I:"fnfnfnfn",f:"fpfnfnffpfpfnf"},rules:{f:n=>n?e.f(n-1,"f"):m(t),p:n=>f(t.move,-Math.PI/2),n:n=>f(t.move,Math.PI/2)}}),hilbertCurve:(e,t)=>({transform:{I:"f",f:"phmnfmfnmhp",h:"nfmphmhpmfn"},rules:{f:n=>n?e.f(n-1,"f"):null,h:n=>n?e.f(n-1,"h"):null,m:n=>m(t),p:n=>f(t.move,-Math.PI/2),n:n=>f(t.move,Math.PI/2)}}),peanoCurve:(e,t)=>({transform:{I:"f",f:"fpfnfnfnfpfpfpfnf"},rules:{f:n=>n?e.f(n-1,"f"):m(t),p:n=>f(t.move,-Math.PI/2),n:n=>f(t.move,Math.PI/2)}}),fibonacciWordFractal:(e,t)=>(t.count=0,{transform:{I:"pf",f:"h",h:"hf"},rules:{p:n=>f(t.move,-Math.PI/2),f:n=>n?e.f(n-1,"f"):(t.count=1-t.count,m(t)),h:n=>n?e.f(n-1,"h"):(t.count=1-t.count,f(t.move,(t.count?1:-1)*Math.PI/2),m(t))}})},fill:{sierpinskiTriangle:(e,t)=>(t.ratio=1/2,t.angle=Math.PI/1.5,t.sides=3,t.rad=920,{transform:{I:"I"},rules:{I:(n,o)=>o<n?(I(t,o),e.f(n,o+1,"I")):null}}),sierpinskiPentagon:(e,t)=>(t.ratio=(1+2*Math.cos(Math.PI/5))/(2*(1+3*Math.cos(Math.PI/5))),t.angle=Math.PI/2.5,t.sides=5,t.rad=840,{transform:{I:"I"},rules:{I:(n,o)=>o<n?(I(t,o),e.f(n,o+1,"I")):null}}),sierpinskiHexagon:(e,t)=>(t.ratio=1/3,t.angle=Math.PI/3,t.sides=6,t.rad=800,{transform:{I:"I"},rules:{I:(n,o)=>o<n?(I(t,o),e.f(n,o+1,"I")):null}}),pentaflake:(e,t)=>(t.ratio=(1+2*Math.cos(Math.PI/5))/(2*(1+3*Math.cos(Math.PI/5))),t.angle=Math.PI/2.5,t.sides=5,t.rad=840,t.invCenters=[],{transform:{I:"I"},rules:{I:(n,o)=>o<n?(k(t,o),e.f(n,o+1,"I")):null}}),hexaflake:(e,t)=>(t.ratio=1/3,t.angle=Math.PI/3,t.sides=6,t.rad=800,t.invCenters=[],{transform:{I:"I"},rules:{I:(n,o)=>o<n?(k(t,o),e.f(n,o+1,"I")):null}})}},L=(e,t,n)=>{const o=E(),i={x:800-(e.bounds.mx+e.bounds.Mx)/2,y:800-(e.bounds.my+e.bounds.My)/2};if(t.appendChild(o),n){o.setAttribute("points","");let r=0;const l=e.points.length;u.renderer=setInterval(()=>{r===l?clearInterval(u.renderer):(o.setAttribute("points",`${o.getAttribute("points")} ${e.points[r].x+i.x},${e.points[r].y+i.y}`),r++)},5)}else o.setAttribute("points",e.points.map(r=>`${r.x+i.x},${r.y+i.y}`).join(" "))},T=(e,t,n,o)=>{var y;const i=Math.pow(e.ratio,t);let r={x:0,y:-e.rad*i};const l=[];e.centers.forEach(s=>{const c=[];for(let d=0;d<e.sides;d++){const a=s.x+r.x,p=s.y+r.y;e.bounds.mx=Math.min(e.bounds.mx,a),e.bounds.my=Math.min(e.bounds.my,p),e.bounds.Mx=Math.max(e.bounds.Mx,a),e.bounds.My=Math.max(e.bounds.My,p),c.push({x:a,y:p}),f(r,e.angle)}l.push(c)}),r={x:0,y:e.rad*i},(y=e.invCenters)==null||y.forEach(s=>{const c=[];for(let d=0;d<e.sides;d++){const a=s.x+r.x,p=s.y+r.y;e.bounds.mx=Math.min(e.bounds.mx,a),e.bounds.my=Math.min(e.bounds.my,p),e.bounds.Mx=Math.max(e.bounds.Mx,a),e.bounds.My=Math.max(e.bounds.My,p),c.push({x:a,y:p}),f(r,e.angle)}l.push(c)});const h={x:800-(e.bounds.mx+e.bounds.Mx)/2,y:800-(e.bounds.my+e.bounds.My)/2};if(o){let s=0;const c=l.length;u.renderer=setInterval(()=>{if(s===c)clearInterval(u.renderer);else{const d=P();d.setAttribute("points",l[s].map(a=>`${a.x+h.x},${a.y+h.y}`).join(" ")),n.appendChild(d),s++}},5)}else l.forEach(s=>{const c=P();c.setAttribute("points",s.map(d=>`${d.x+h.x},${d.y+h.y}`).join(" ")),n.appendChild(c)})},x=document.getElementById("fractalName"),g=document.getElementById("fractalDepth"),S=document.getElementById("animate"),M=document.getElementById("alert-box"),$=document.getElementById("reset"),j=document.getElementById("render"),b=document.getElementById("svg-box"),H=document.getElementById("version");for(const[e,t]of Object.entries(B))if(t.length){const n=document.createElement("option");n.setAttribute("value",""),n.innerText="----"+e[0].toUpperCase()+e.slice(1)+"----",n.setAttribute("disabled","true"),x.appendChild(n);for(const o of t){const i=o.split(" ");i[0]=i[0].toLowerCase();const r=document.createElement("option");r.setAttribute("value",`${e}-${i.join("")}`),r.innerText=o,x.appendChild(r)}}const N={linear:(e,t,n,o)=>{const i=w(),{transform:r,rules:l}=C.linear[n](u,i);u.f=(h,y)=>[...r[y]].forEach(s=>l[s](h)),u.f(e,"I"),L(i,t,o)},fill:(e,t,n,o)=>{const i=A(),{transform:r,rules:l}=C.fill[n](u,i);u.f=(h,y,s)=>[...r[s]].forEach(c=>l[c](h,y)),u.f(e,0,"I"),T(i,e,t,o)}};x.addEventListener("change",()=>{M.innerText=""});g.addEventListener("change",()=>{M.innerText=""});$.addEventListener("click",()=>{b.innerHTML="",x.value=0,g.value=0,M.innerText="",u.renderer&&clearInterval(u.renderer)});j.addEventListener("click",e=>{b.innerHTML="",u.renderer&&clearInterval(u.renderer);const t=x.value,n=parseInt(g.value);if(t===""){M.innerText="Select a valid fractal Type.";return}if(n<0){M.innerText="Enter valid depth";return}const o=t.split("-");N[o[0]](n,b,o[1],S.checked)});H.innerText="0.1.4";
